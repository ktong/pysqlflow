# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: table.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='table.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x0btable.proto\"\xe3\x01\n\x05Table\x12\"\n\x06schema\x18\x01 \x03(\x0b\x32\x12.Table.SchemaEntry\x12$\n\x07\x63olumns\x18\x02 \x03(\x0b\x32\x13.Table.ColumnsEntry\x1a\x16\n\x06\x43olumn\x12\x0c\n\x04\x64\x61ta\x18\x01 \x03(\t\x1a\x39\n\x0bSchemaEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x19\n\x05value\x18\x02 \x01(\x0e\x32\n.FieldType:\x02\x38\x01\x1a=\n\x0c\x43olumnsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1c\n\x05value\x18\x02 \x01(\x0b\x32\r.Table.Column:\x02\x38\x01*5\n\tFieldType\x12\x07\n\x03INT\x10\x00\x12\t\n\x05\x46LOAT\x10\x01\x12\x08\n\x04\x44\x41TE\x10\x02\x12\n\n\x06STRING\x10\x03\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_FIELDTYPE = _descriptor.EnumDescriptor(
  name='FieldType',
  full_name='FieldType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='INT', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DATE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STRING', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=245,
  serialized_end=298,
)
_sym_db.RegisterEnumDescriptor(_FIELDTYPE)

FieldType = enum_type_wrapper.EnumTypeWrapper(_FIELDTYPE)
INT = 0
FLOAT = 1
DATE = 2
STRING = 3



_TABLE_COLUMN = _descriptor.Descriptor(
  name='Column',
  full_name='Table.Column',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data', full_name='Table.Column.data', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=99,
  serialized_end=121,
)

_TABLE_SCHEMAENTRY = _descriptor.Descriptor(
  name='SchemaEntry',
  full_name='Table.SchemaEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='Table.SchemaEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='Table.SchemaEntry.value', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=123,
  serialized_end=180,
)

_TABLE_COLUMNSENTRY = _descriptor.Descriptor(
  name='ColumnsEntry',
  full_name='Table.ColumnsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='Table.ColumnsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='Table.ColumnsEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=182,
  serialized_end=243,
)

_TABLE = _descriptor.Descriptor(
  name='Table',
  full_name='Table',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='schema', full_name='Table.schema', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='columns', full_name='Table.columns', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_TABLE_COLUMN, _TABLE_SCHEMAENTRY, _TABLE_COLUMNSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16,
  serialized_end=243,
)

_TABLE_COLUMN.containing_type = _TABLE
_TABLE_SCHEMAENTRY.fields_by_name['value'].enum_type = _FIELDTYPE
_TABLE_SCHEMAENTRY.containing_type = _TABLE
_TABLE_COLUMNSENTRY.fields_by_name['value'].message_type = _TABLE_COLUMN
_TABLE_COLUMNSENTRY.containing_type = _TABLE
_TABLE.fields_by_name['schema'].message_type = _TABLE_SCHEMAENTRY
_TABLE.fields_by_name['columns'].message_type = _TABLE_COLUMNSENTRY
DESCRIPTOR.message_types_by_name['Table'] = _TABLE
DESCRIPTOR.enum_types_by_name['FieldType'] = _FIELDTYPE

Table = _reflection.GeneratedProtocolMessageType('Table', (_message.Message,), dict(

  Column = _reflection.GeneratedProtocolMessageType('Column', (_message.Message,), dict(
    DESCRIPTOR = _TABLE_COLUMN,
    __module__ = 'table_pb2'
    # @@protoc_insertion_point(class_scope:Table.Column)
    ))
  ,

  SchemaEntry = _reflection.GeneratedProtocolMessageType('SchemaEntry', (_message.Message,), dict(
    DESCRIPTOR = _TABLE_SCHEMAENTRY,
    __module__ = 'table_pb2'
    # @@protoc_insertion_point(class_scope:Table.SchemaEntry)
    ))
  ,

  ColumnsEntry = _reflection.GeneratedProtocolMessageType('ColumnsEntry', (_message.Message,), dict(
    DESCRIPTOR = _TABLE_COLUMNSENTRY,
    __module__ = 'table_pb2'
    # @@protoc_insertion_point(class_scope:Table.ColumnsEntry)
    ))
  ,
  DESCRIPTOR = _TABLE,
  __module__ = 'table_pb2'
  # @@protoc_insertion_point(class_scope:Table)
  ))
_sym_db.RegisterMessage(Table)
_sym_db.RegisterMessage(Table.Column)
_sym_db.RegisterMessage(Table.SchemaEntry)
_sym_db.RegisterMessage(Table.ColumnsEntry)


_TABLE_SCHEMAENTRY.has_options = True
_TABLE_SCHEMAENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_TABLE_COLUMNSENTRY.has_options = True
_TABLE_COLUMNSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
# @@protoc_insertion_point(module_scope)
